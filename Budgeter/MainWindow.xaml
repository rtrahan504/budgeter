<Window x:Class="Budgeter.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:Budgeter"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
		mc:Ignorable="d"
		Title="{Binding DynamicTitle, RelativeSource={RelativeSource Mode=Self}}" Height="550" Width="900" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
    <Window.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="GetEnumValues_RecurrenceInterval">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:RecurrenceIntervals"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="GetEnumValues_AmountMode">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:AmountModes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <local:DoublePositive x:Key="DoublePositive"/>
        <Style x:Key="VerticalSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
            <Setter Property="Margin" Value="6,0,6,0"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <TransformCollection>
                                <RotateTransform Angle="90"/>
                            </TransformCollection>
                        </TransformGroup.Children>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Name="MenuItem_New" Click="OnMenuClick" />
                <MenuItem Header="_Open" Name="MenuItem_Open" Click="OnMenuClick" InputGestureText="Ctrl+O"/>
                <MenuItem Header="_Save" Name="MenuItem_Save" Click="OnMenuClick" InputGestureText="Ctrl+S"/>
                <MenuItem Header="Save As" Name="MenuItem_SaveAs" Click="OnMenuClick" />
                <Separator />
                <MenuItem Header="_Exit" Name="MenuItem_Exit" Click="OnMenuClick" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Refresh" Name="MenuItem_Refresh" Click="OnMenuClick"/>
                <Separator />
                <MenuItem Header="Activate Selected" Name="MenuItem_ActivateSelected" Click="OnMenuClick"/>
                <MenuItem Header="Deactivate Selected" Name="MenuItem_DeactivateSelected" Click="OnMenuClick"/>
                <Separator />
                <MenuItem Header="Add Charge" Name="MenuItem_AddCharge" Click="OnMenuClick"/>
                <MenuItem Header="Add Balance Override" Name="MenuItem_AddBalanceOverride" Click="OnMenuClick" />
                <MenuItem Header="Delete Selected" Name="MenuItem_DeleteSelected" Click="OnMenuClick" />
            </MenuItem>
            <MenuItem Header="_About" Name="MenuItem_About" Click="OnMenuClick"/>
        </Menu>
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" BorderThickness="1" BorderBrush="#FF688CAF">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0">Balance Sheet</Label>
                    <DataGrid Name="dataGrid_Balance" Grid.Row="1" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" SelectionChanged="DataGrid_Balance_SelectionChanged" SelectionMode="Extended" CellEditEnding="DataGrid_Balance_CellEditEnding" BeginningEdit="DataGrid_Balance_BeginningEdit" CanUserSortColumns="False" BorderBrush="{x:Null}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="Today">
                                        <Setter Property="Background" Value="Blue"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn x:Name="BalanceEnabledColumn" Binding="{Binding Enabled}" Header="Enabled" CanUserSort="False"/>
                            <DataGridTemplateColumn x:Name="BalanceDateColumn" Header="Date" CanUserSort="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Date, StringFormat=d}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding Date}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="BalanceNameColumn" Binding="{Binding Name}" Header="Name" CanUserSort="False" />
                            <DataGridTextColumn x:Name="BalanceTypeColumn" Binding="{Binding Type}" Header="Type" CanUserSort="False" IsReadOnly="True"/>
                            <DataGridTextColumn x:Name="BalanceAmountColumn" Binding="{Binding Amount, StringFormat={}{0:C2}}" Header="Amount" CanUserSort="False">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn x:Name="BalanceBalanceColumn" Binding="{Binding Balance, StringFormat={}{0:C2}}" Header="Balance" IsReadOnly="True" CanUserSort="False" Foreground="Black">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Balance, Converter={StaticResource DoublePositive}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                <Setter Property="Background" Value="#22ff22"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Balance, Converter={StaticResource DoublePositive}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                <Setter Property="Background" Value="#ff5555"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Balance Override">
                                                <Setter Property="Background" Value="Yellow"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="*" IsReadOnly="True" CanUserSort="False"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
            <GridSplitter Width="5" HorizontalAlignment="Stretch" Grid.Column="1"/>
            <Border Grid.Column="2" BorderThickness="1" BorderBrush="#FF688CAF">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0">Recurring Transactions</Label>
                    <DataGrid Name="dataGrid_Templates" Grid.Row="1" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" IsReadOnly="False" SelectionMode="Single" CellEditEnding="DataGrid_Templates_CellEditEnding" BorderBrush="{x:Null}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Name"/>
                            <DataGridTemplateColumn Header="Date">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Date, StringFormat=d}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding Date}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource GetEnumValues_RecurrenceInterval}}" SelectedValueBinding="{Binding RecurrenceInterval}" Header="Interval"/>
                            <DataGridTextColumn Binding="{Binding Interval}" Header="Interval Multiple"/>
                            <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource GetEnumValues_AmountMode}}" SelectedValueBinding="{Binding AmountMode}" Header="Amount Mode"/>
                            <DataGridTextColumn Binding="{Binding PredefinedAmount, StringFormat={}{0:C2}}" Header="Amount">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Width="*" IsReadOnly="True" CanUserSort="False"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
        </Grid>
    </DockPanel>
</Window>
  